<% increment_tab_index(0) %>

<%= render partial: 'detail_line', locals: {info: @author.name, label: 'name'} %>
<%= render partial: 'detail_line', locals: {info: @author.abbrev, label: 'abbrev'} %>
<%= render partial: 'detail_line', locals: {info: @author.full_name, label: 'extra name info'} %>
<% if @author.notes.present? && @author.notes.length > 0 %>
  <%= divider %>
  Notes
  <br>
  <%= @author.notes %>
<% end %>
<%= divider %>
<%= render partial: 'detail_line', locals: {info: @author.normalised_name, label: 'name without diacritics', warn: !@author&.normalised_name&.match(/[^ -~]/).nil?} %>
<%= render partial: 'detail_line', locals: {info: @author.normalised_abbrev, label: 'abbrev without diacritics', warn: !@author&.normalised_abbrev&.match(/[^ -~]/).nil?} %>

<%= divider %>

<% search_count = @author.master_of.try('count') || 0 %>
<% if search_count > 0 %>
  <% @author.master_of.each do |duplicate| %>
    <%= render partial: 'detail_line', 
               locals: {info: link_to(duplicate.name_and_or_abbrev,
                                      search_path(query_target: "author", query_string: "id:#{duplicate.id}"),
                                      title: 'See duplicate of'), 
                        label: 'duplicate'} %>
    <%= divider %>
  <% end %>
<% end %>

<% if @author.duplicate_of_id.present? %>
    <%= render partial: 'detail_line', 
               locals: {info: link_to(@author.duplicate_of.name_and_or_abbrev,
                        search_path(query_target: "author", query_string: "id:#{@author.duplicate_of_id}"),
                        title: 'See duplicate'), 
                        label: 'duplicate of'} %>
    <%= divider %>
<% end %>

<% search_count = @author.references.count %>
<% if search_count > 0 %>
<%= render partial: 'detail_line', 
           locals: {info: link_to("#{pluralize(search_count,'authored reference')} ",
                                  search_path(query_target: "reference", query_string: "author-id:#{@author.id}"),
                                  title: 'See references'), 
                    label: ''} %>
<% else %>
  No authored references.
<% end %>
<%= divider %>

<% need_name_divider = false %>
<% search_count = @author.names.count %>
<% if search_count > 0 %>
  <% need_name_divider = true %>
  <%= link_to("#{pluralize(search_count,'authored name')} ", search_path(query_target: "name", query_string: "author-id:#{@author.id} nt:*"), title: 'See names') %>
  <br>
<% end %>

<% search_count = @author.ex_names.count %>
<% if search_count > 0 %>
  <% need_name_divider = true %>
  <%= link_to("#{pluralize(search_count,'ex-authored name')} ",search_path(query_target: "name", query_string: "ex-author-id:#{@author.id} nt:*"),title: 'See ex names')%>
  <br>
<% end %>

<% search_count = @author.base_names.count %>
<% if search_count > 0 %>
  <% need_name_divider = true %>
  <%= link_to("#{pluralize(search_count,'base authored name')} ",search_path(query_target: "name", query_string: "base-author-id:#{@author.id} nt:*"),title: 'See base names')%>
  <br>
<% end %>

<% search_count = @author.ex_base_names.count %>
<% if search_count > 0 %>
  <% need_name_divider = true %>
  <%= link_to("#{pluralize(search_count,'ex-base authored name')} ",search_path(query_target: "name", query_string: "ex-base-author-id:#{@author.id} nt:*"),title: 'See ex-base names')%>
  <br>
<% end %>


<% search_count = @author.sanctioned_names.count %>
<% if search_count > 0 %>
  <% need_name_divider = true %>
  <%= link_to("#{pluralize(search_count,'sanctioned name')} ",search_path(query_target: "name", query_string: "sanctioning-author-id:#{@author.id} nt:*"),title: 'See sanctioned names') %>
  <br>
<% end %>

<% if need_name_divider %>
  <%= divider %>
<% end %>

<% if @author.comments.size > 0  %>
  <h5><%= pluralize(@author.comments.size,'Comment') %></h5>
  <% @author.comments.sort{|x,y| x.created_at <=> y.created_at}.each do |comment|  %>
    <%= render partial: 'comments/show', locals: {comment: comment} %>
    <%= divider %>
  <% end %>
<% end %>

<h5>Author #<%= @author.id %></h5>
<% if @author.duplicate_of_id.present? %>
<h5>Duplicate of author #<%= @author.duplicate_of_id %></h5>
<% end %>

<%= created_by_whom_and_when(@author).html_safe %>
<br>
<%= updated_by_whom_and_when(@author).html_safe %>

<% if @author.source_system %>
  <br>Migrated from <%= "#{@author.source_system.downcase} ##{@author.source_id}" %>
<% end %>


