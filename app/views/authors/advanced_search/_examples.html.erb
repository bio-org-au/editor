<div id="example-search-author" class="example-search-tab">
<h4>Author search examples</h4>
<br>
<h5 class="">List authors</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Authors', search_string: "*",explanation: %Q(First 100 authors, order by name.)},
      {search_target: 'Authors', search_string: "bent", explanation: %Q(Authors with name or abbreviation containing "bent".)},
      {search_target: 'Authors', search_string: "hook", explanation: %Q(Authors with name or abbreviation containing "hook".)},
      {search_target: 'Authors', search_string: "bent hook", explanation: %Q(Authors with name or abbreviation containing "bent" and "hook" in any order.)},
      {search_target: 'Authors', search_string: "hook bent", explanation: %Q(Authors with name or abbreviation containing "hook" and "bent" in any order.)},
      {search_target: 'Authors', search_string: "name: bent hook", explanation: %Q(Authors with name text that includes 'bent' and 'hook' in any order.)},
      {search_target: 'Authors', search_string: "name: hook bent", explanation: %Q(Authors with name text that includes 'hook' and 'bent' in any order.)},
      {search_target: 'Authors', search_string: "abbrev: bent hook", explanation: %Q(Authors with abbrev text that includes 'bent' and 'hook' in any order.)},
      {search_target: 'Authors', search_string: "abbrev: hook bent", explanation: %Q(Authors with abbrev text that includes 'hook' and 'bent' in any order.)},
      {search_target: 'Authors', search_string: "full-name:*", explanation: %Q(Authors with full or extra name text.)},
      {search_target: 'Authors', search_string: "full-name: bald*greg", explanation: %Q(Authors with full or extra name text that include "bald" and "greg" in that order.)},
      {search_target: 'Authors', search_string: "comments:*", explanation: %Q(List authors with a comment.)},
      {search_target: 'Authors', search_string: "comments-by:*", explanation: %Q(Count authors with a comment by someone.)},
      {search_target: 'Authors', search_string: "...", explanation: %Q(Currently no authors with comments, so difficult to give more examples.)},
      {search_target: 'Authors', search_string: "notes:*", explanation: %Q(List authors with notes.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<h5 class="">Search for diacritics</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Authors', search_string: "müLl",explanation: %Q(Authors with name or abbreviation containing 'müLl' or 'mull'.)},
      {search_target: 'Authors', search_string: "muLl",explanation: %Q(Authors with name or abbreviation containing 'müLl' or 'mull'.)},
      {search_target: 'Authors', search_string: "abbrev: müLl",explanation: %Q(Authors with abbreviation containing 'müLl' or 'mull'.)},
      {search_target: 'Authors', search_string: "abbrev: muLl",explanation: %Q(Authors with abbreviation containing 'müLl' or 'mull'.)},
      {search_target: 'Authors', search_string: "name: müLl",explanation: %Q(Authors with name containing 'müLl' or 'mull'.)},
      {search_target: 'Authors', search_string: "name: muLl",explanation: %Q(Authors with name containing 'müLl' or 'mull'.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<h5 class="">Exact search</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Authors', search_string: "name-exact: * in *",explanation: %Q(Authors with name containing ' in '.)},
      {search_target: 'Authors', search_string: "name-exact: * D. *",explanation: %Q(Authors with name containing ' D. '.)},
      {search_target: 'Authors', search_string: "name-exact: * D.",explanation: %Q(Authors with name ending ' D.'.)},
      {search_target: 'Authors', search_string: "name-exact: D*s",explanation: %Q(Authors with name starting 'D' and ending with 's'.)},
      {search_target: 'Authors', search_string: "name-exact: De *",explanation: %Q(Authors with name starting 'De ' or 'DE ' or 'de '.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<h5 class="">Query assertions</h5>
<table class="example-searches table table-striped">
  <% [
      {search_target: 'Authors', search_string: "is-a-duplicate:", explanation: %Q(Authors marked as duplicates.)},
      {search_target: 'Authors', search_string: "is-not-a-duplicate:", explanation: %Q(Authors not marked as duplicates.)},
      {search_target: 'Authors', search_string: "has-abbrev:", explanation: %Q(First 100 authors with an abbreviation.)},
      {search_target: 'Authors', search_string: "has-name:", explanation: %Q(First 100 authors with a name.)},
      {search_target: 'Authors', search_string: "has-no-abbrev:", explanation: %Q(First 100 authors with no abbreviation.)},
      {search_target: 'Authors', search_string: "has-no-name:", explanation: %Q(First 100 authors with no name.)},
      {search_target: 'Authors', search_string: "count has-abbrev: has-no-name:", explanation: %Q(Count authors with an abbreviation but no name.)},
      {search_target: 'Authors', search_string: "count has-name: has-no-abbrev:", explanation: %Q(Count authors with a name but no abbreviation.)},
      {search_target: 'Authors', search_string: "count has-no-name: has-no-abbrev:", explanation: %Q(Count authors with neither name nor abbreviation. (Hopefully none.))},
      {search_target: 'Authors', search_string: "count has-name: has-abbrev:", explanation: %Q(Count authors with name and abbreviation.)},
      {search_target: 'Authors', search_string: "has-no-abbrev: has-any-authored-name:", explanation: %Q(Authors with no abbreviation that have authored a name.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>

<h5 class="">Count authors</h5>
<table class="example-searches table table-striped">
  <% [{search_target: 'Authors', search_string: "count",explanation: %Q(Start with "count author" to count authors.)},
      {search_target: 'Authors', search_string: "count bentham", explanation: %Q(Counting sets.)},
      {search_target: 'Authors', search_string: "count comments:*", explanation: %Q(Count commented authors by turning a text field into an assertion.)},
      {search_target: 'Authors', search_string: "count comments-by:*", explanation: %Q(Count authors with a comment by someone.)},
      {search_target: 'Authors', search_string: "count notes:*", explanation: %Q(Count authors with notes by turning a text field into an assertion.)},
      {search_target: 'Authors', search_string: "count is-a-duplicate:", explanation: %Q(Count duplicate authors.)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

<h5 class="">Quality checks</h5>
<table class="example-searches table table-striped">
  <% [{search_target: 'Authors', search_string: "missed-diacritics:",explanation: %Q(name or abbrev has diacritics not handled by the unaccent function)},
      ].each do |val| %>
  <tr>
    <td class="width-30-percent">
      <%= link_to(val[:search_string], search_path(query_string: val[:search_string], query_target: val[:search_target]),class:'blue', title: "Run the described search.") %>
    </td>
    <td><%= val[:explanation].html_safe %></td>
  </tr>
  <% end %>
</table>
<br>

</div>
