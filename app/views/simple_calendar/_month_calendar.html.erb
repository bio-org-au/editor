<div class="simple-calendar">
  <div class="calendar-heading">

    <% if params[:start_date].class == String %>
      <% start_date = Date.parse(params[:start_date]) %>
    <% else %>
      <% start_date = params[:start_date] %>
    <% end %>
    <% next_month = start_date + 30 %>
    <% prev_month = start_date - 30 %>


    <%#= link_to t('simple_calendar.next', default: '<'), some_calendar_path(id: @some_period.id, start_date: prev_month), remote: true, title: "Previous month" %>
    <span class="calendar-title"><%= t('date.month_names')[start_date.month] %> <%= start_date.year %></span>
    <%#= link_to t('simple_calendar.next', default: '>'), some_calendar_path(id: @some_period.id, start_date: next_month), remote: true, title: "Next month" %>

  </div>

  <table class="table table-striped">
    <thead>
      <tr>
        <% date_range.slice(0, 7).each do |day| %>
          <th><%= t('date.abbr_day_names')[day.wday] %></th>
        <% end %>
      </tr>
    </thead>

    <tbody>
      <% date_range.each_slice(7) do |week| %>
        <tr>
          <% week.each do |day| %>
            <%= content_tag :td, class: calendar.td_classes_for(day) do %>
              <% if defined?(Haml) && respond_to?(:block_is_haml?) && block_is_haml?(passed_block) %>
                <% capture_haml(day, sorted_events.fetch(day, []), &passed_block) %>
              <% else %>
                <% passed_block.call day, sorted_events.fetch(day, []) %>
              <% end %>
            <% end %>
          <% end %>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>
